)
library(labelled)
library(gtsummary)
var_label(params$data) <- list(
id = "ID",
ab_resistance = "Antibody resistance",
shield_glycans = "Shield glycans",
region = "Region",
env_length = "Length of Env protein"
)
install.packages("here")
getwd
wd
getwd()
gitlog
here::i_am("code/visual.R")
setwd("C:/Users/rache/OneDrive - Emory University/Documents/Fall 2022/INFO 580 Data Science Toolkit/RStudio Projects/engagement-report")
here::i_am("code/visual.R")
absolute_file_location <- here::here("data","course_engagement.csv")
data <- read.csv(absolute_file_location, header = TRUE)
library(ggplot2)
# Replacing the ":" with a "." so that R can recognize it eventually as numeric variable
data$length_sub <- gsub(":", ".", data$length) # trying to replace all the colons with a period and creating a new variable
data$length_sub
table(data$length_sub)
# Adding quotation marks
data$length_new <- gsub(",", "", data$length_sub)
data$length_new
str(data$length_new)
# Changing one value so that it can be summed later
data$length_new[data$length_new == "1.04.56"] <- "62.5"
# Turning the length variable into a numeric variable
data$leng <- as.numeric(data$length_new)
summary(data$leng)
library(dplyr)
data %>% # creating a new variable that sums the total video length for each topic
group_by(topic) %>%
mutate(sum_lengths = sum(leng)) -> data
summary(data$sum_lengths) # checking to see how many NAs there are
# visualize a comparison of the total length of all videos for each topic
bar_plot <- ggplot(data, aes(x = topic, y = sum_lengths, fill = topic)) +
geom_bar(position="dodge", stat="identity") +
labs(x = "Topic" , y = "Length of Video (in minutes)", title = "Figure 1. INFO 550 Lecture Video Lengths by Topic") +
scale_x_discrete(labels = c("Course Logistics", "Mac Install",
"Make", "Project Organization",
"RMarkdown", "Terminal",
"Windows Install")) +
scale_fill_manual(name = "Topics", labels = c('Course Logistics',
"Mac Install",
"Make",
"Project Organization",
"RMarkdown",
"Terminal",
"Windows Install"),
values = c('aquamarine', 'aquamarine3',
'lightseagreen', 'pink',
'lightblue1', 'lightblue',
'lightskyblue4')) +
theme(plot.title = element_text(hjust = 0.5)) +
theme_bw()
bar_plot
ggsave(here::here("output/bar_plot.png"),
plot = bar_plot,
device = "png")
# load the library
library(ggplot2)
library(data.table) #fast way to load csv data
# load the library
library(ggplot2)
library(data.table)
install.packages(data.table)
install.packages("data.frame")
# load the library
library(ggplot2)
# load the data and create vectors
engagement_data <- fread("course_engagement.csv") #in conjunction with library(data.table to load csv)
install.packages("installr")
library(installr)
updateR()
install.packages("data.table")
# load the library
library(ggplot2)
library(data.table) #fast way to load csv data
libary(data.table)
library(data.table)
install.packages("data.table")
install.packages("RTools")
install.packages("data.table")
# load the library
library(ggplot2)
library(data.table) #fast way to load csv data
# load the data and create vectors
engagement_data <- fread("course_engagement.csv") #in conjunction with library(data.table to load csv)
# load the library
library(ggplot2)
library(data.table) #fast way to load csv data
# load the library
library(ggplot2)
library(data.table) #fast way to load csv data
# load the data and create vectors
engagement_data <- fread("code/course_engagement.csv") #in conjunction with library(data.table to load csv)
here::i_am("code/engagement_time_trends.R")
# load the library
# load the library
library(ggplot2)
library(data.table) #fast way to load csv data
# load the data and create vectors
engagement_data <- fread("code/course_engagement.csv") #in conjunction with library(data.table to load csv)
#creating data variables
a_val <- engage_data$unique_viewers
library(ggplot2)
library(data.table) #fast way to load csv data
# load the data and create vectors
engagement_data <- fread("code/course_engagement.csv") #in conjunction with library(data.table to load csv)
here::i_am("code/engagement_time_trends.R")
# load the library
library(ggplot2)
library(data.table) #fast way to load csv data
# load the data and create vectors
engagement_data <- fread("code/course_engagement.csv") #in conjunction with library(data.table to load csv)
here::i_am("code/engage_time.R")
absolute_file_location <- here::here("data","course_engagement.csv")
data <- read.csv(absolute_file_location, header = TRUE)
library(ggplot2)
length_sec <- c(711,287,1076,3896,347,323,229,65,155,597,169,102,126,290,566,377,527,102,482,325,534,422,315,298,63,513,207,402,209,603,441,231,587,227,177,523,391,228,414,251,271,182,371,79,1163,488,405,176,505,277,369,565,451,465,492,160,578,449,281,296,456,390,184,439,458,532,277,272,83,202,405,185,379,118,163,350,517,472,313,143)
len_sec <- c(711,287,1076,3896,347,323,229,65,155,597,169,102,126,290,566,377,527,102,482,325,534,422,315,298,63,513,207,402,209,603,441,231,587,227,177,523,391,228,414,251,271,182,371,79,1163,488,405,176,505,277,369,565,451,465,492,160,578,449,281,296,456,390,184,439,458,532,277,272,83,202,405,185,379,118,163,350,517,472,313,143)
#engagement scatterplot
avg_length_6_weeks <- c(621.77,363.53,275.91,447.44,329.81,312.24)
avg_views_6_weeks <- c(39.92,59.16,57.45,53.22,52.36,44.94)
avg_length_videos_min <- c(10.36,6.06,4.6,7.46,5.5,5.2)
weeks_avg <- c(1,2,3,4,5,6)
#length_val <- as.POSIXct(length_num, format = '%H:M:%S') #ask David
# Convert one variable to numeric
plot_1 <- plot(avg_length_videos_min,avg_views_6_weeks, xlab = "Average Weekly Length of Videos (Minutes)", ylab = "Average Weekly View Count", main = "Trends Displaying Data Science Toolkit Students Engagament Weekly", type = "h", col = "blue") +
points(avg_length_videos_min,avg_views_6_weeks, cex = 2, pch = 19, col ="blue")
plot_1
png("output/plot_1.png")
plot(avg_length_videos_min,avg_views_6_weeks, xlab = "Average Weekly Length of Videos (Minutes)", ylab = "Average Weekly View Count", main = "Trends Displaying Data Science Toolkit Students Engagament Weekly", type = "h", col = "blue") +
points(avg_length_videos_min,avg_views_6_weeks, cex = 2, pch = 19, col = "blue")
dev.off()
here::i_am("code/engage_time.R")
absolute_file_location <- here::here("data","course_engagement.csv")
data <- read.csv(absolute_file_location, header = TRUE)
library(ggplot2)
length_sec <- c(711,287,1076,3896,347,323,229,65,155,597,169,102,126,290,566,377,527,102,482,325,534,422,315,298,63,513,207,402,209,603,441,231,587,227,177,523,391,228,414,251,271,182,371,79,1163,488,405,176,505,277,369,565,451,465,492,160,578,449,281,296,456,390,184,439,458,532,277,272,83,202,405,185,379,118,163,350,517,472,313,143)
len_sec <- c(711,287,1076,3896,347,323,229,65,155,597,169,102,126,290,566,377,527,102,482,325,534,422,315,298,63,513,207,402,209,603,441,231,587,227,177,523,391,228,414,251,271,182,371,79,1163,488,405,176,505,277,369,565,451,465,492,160,578,449,281,296,456,390,184,439,458,532,277,272,83,202,405,185,379,118,163,350,517,472,313,143)
#engagement scatterplot
avg_length_6_weeks <- c(621.77,363.53,275.91,447.44,329.81,312.24)
avg_views_6_weeks <- c(39.92,59.16,57.45,53.22,52.36,44.94)
avg_length_videos_min <- c(10.36,6.06,4.6,7.46,5.5,5.2)
weeks_avg <- c(1,2,3,4,5,6)
#length_val <- as.POSIXct(length_num, format = '%H:M:%S') #ask David
# Convert one variable to numeric
time_plot <- plot(avg_length_videos_min,avg_views_6_weeks, xlab = "Average Weekly Length of Videos (Minutes)", ylab = "Average Weekly View Count", main = "Trends Displaying Data Science Toolkit Students Engagament Weekly", type = "h", col = "blue") +
points(avg_length_videos_min,avg_views_6_weeks, cex = 2, pch = 19, col ="blue")
time_plot
png("output/time_plot.png")
plot(avg_length_videos_min,avg_views_6_weeks, xlab = "Average Weekly Length of Videos (Minutes)", ylab = "Average Weekly View Count", main = "Trends Displaying Data Science Toolkit Students Engagament Weekly", type = "h", col = "blue") +
points(avg_length_videos_min,avg_views_6_weeks, cex = 2, pch = 19, col = "blue")
dev.off()
here::i_am("code/visual.R")
absolute_file_location <- here::here("data","course_engagement.csv")
data <- read.csv(absolute_file_location, header = TRUE)
library(ggplot2)
# Replacing the ":" with a "." so that R can recognize it eventually as numeric variable
data$length_sub <- gsub(":", ".", data$length) # trying to replace all the colons with a period and creating a new variable
data$length_sub
table(data$length_sub)
# Adding quotation marks
data$length_new <- gsub(",", "", data$length_sub)
data$length_new
str(data$length_new)
# Changing one value so that it can be summed later
data$length_new[data$length_new == "1.04.56"] <- "62.5"
# Turning the length variable into a numeric variable
data$leng <- as.numeric(data$length_new)
summary(data$leng)
library(dplyr)
data %>% # creating a new variable that sums the total video length for each topic
group_by(topic) %>%
mutate(sum_lengths = sum(leng)) -> data
summary(data$sum_lengths) # checking to see how many NAs there are
# visualize a comparison of the total length of all videos for each topic
bar_plot <- ggplot(data, aes(x = topic, y = sum_lengths, fill = topic)) +
geom_bar(position="dodge", stat="identity") +
labs(x = "Topic" , y = "Length of Video (in minutes)", title = "Figure 1. INFO 550 Lecture Video Lengths by Topic") +
scale_x_discrete(labels = c("Course Logistics", "Mac Install",
"Make", "Project Organization",
"RMarkdown", "Terminal",
"Windows Install")) +
scale_fill_manual(name = "Topics", labels = c('Course Logistics',
"Mac Install",
"Make",
"Project Organization",
"RMarkdown",
"Terminal",
"Windows Install"),
values = c('aquamarine', 'aquamarine3',
'lightseagreen', 'pink',
'lightblue1', 'lightblue',
'lightskyblue4')) +
theme(plot.title = element_text(hjust = 0.5)) +
theme_bw()
bar_plot
ggsave(here::here("output/bar_plot.png"),
plot = bar_plot,
device = "png")
here::i_am("code/visual.R")
absolute_file_location <- here::here("data","course_engagement.csv")
data <- read.csv(absolute_file_location, header = TRUE)
library(ggplot2)
# Replacing the ":" with a "." so that R can recognize it eventually as numeric variable
data$length_sub <- gsub(":", ".", data$length) # trying to replace all the colons with a period and creating a new variable
data$length_sub
table(data$length_sub)
# Adding quotation marks
data$length_new <- gsub(",", "", data$length_sub)
data$length_new
str(data$length_new)
# Changing one value so that it can be summed later
data$length_new[data$length_new == "1.04.56"] <- "62.5"
# Turning the length variable into a numeric variable
data$leng <- as.numeric(data$length_new)
summary(data$leng)
library(dplyr)
data %>% # creating a new variable that sums the total video length for each topic
group_by(topic) %>%
mutate(sum_lengths = sum(leng)) -> data
summary(data$sum_lengths) # checking to see how many NAs there are
# visualize a comparison of the total length of all videos for each topic
bar_plot <- ggplot(data, aes(x = topic, y = sum_lengths, fill = topic)) +
geom_bar(position="dodge", stat="identity") +
labs(x = "Topic" , y = "Length of Video (in minutes)", title = "Figure 1. INFO 550 Lecture Video Lengths by Topic") +
scale_x_discrete(labels = c("Course Logistics", "Mac Install",
"Make", "Project Organization",
"RMarkdown", "Terminal",
"Windows Install")) +
scale_fill_manual(name = "Topics", labels = c('Course Logistics',
"Mac Install",
"Make",
"Project Organization",
"RMarkdown",
"Terminal",
"Windows Install"),
values = c('aquamarine', 'aquamarine3',
'lightseagreen', 'pink',
'lightblue1', 'lightblue',
'lightskyblue4')) +
theme(plot.title = element_text(hjust = 0.5)) +
theme_bw()
bar_plot
ggsave(here::here("output/bar_plot.png"),
plot = bar_plot,
width = 10,
height = 12,
units = "in",
device = "png")
here::i_am("code/visual.R")
absolute_file_location <- here::here("data","course_engagement.csv")
data <- read.csv(absolute_file_location, header = TRUE)
library(ggplot2)
# Replacing the ":" with a "." so that R can recognize it eventually as numeric variable
data$length_sub <- gsub(":", ".", data$length) # trying to replace all the colons with a period and creating a new variable
data$length_sub
table(data$length_sub)
# Adding quotation marks
data$length_new <- gsub(",", "", data$length_sub)
data$length_new
str(data$length_new)
# Changing one value so that it can be summed later
data$length_new[data$length_new == "1.04.56"] <- "62.5"
# Turning the length variable into a numeric variable
data$leng <- as.numeric(data$length_new)
summary(data$leng)
library(dplyr)
data %>% # creating a new variable that sums the total video length for each topic
group_by(topic) %>%
mutate(sum_lengths = sum(leng)) -> data
summary(data$sum_lengths) # checking to see how many NAs there are
# visualize a comparison of the total length of all videos for each topic
bar_plot <- ggplot(data, aes(x = topic, y = sum_lengths, fill = topic)) +
geom_bar(position="dodge", stat="identity") +
labs(x = "Topic" , y = "Length of Video (in minutes)", title = "Figure 1. INFO 550 Lecture Video Lengths by Topic") +
scale_x_discrete(labels = c("Course Logistics", "Mac Install",
"Make", "Project Organization",
"RMarkdown", "Terminal",
"Windows Install")) +
scale_fill_manual(name = "Topics", labels = c('Course Logistics',
"Mac Install",
"Make",
"Project Organization",
"RMarkdown",
"Terminal",
"Windows Install"),
values = c('aquamarine', 'aquamarine3',
'lightseagreen', 'pink',
'lightblue1', 'lightblue',
'lightskyblue4')) +
theme(plot.title = element_text(hjust = 0.5)) +
theme_bw()
bar_plot
ggsave(here::here("output/bar_plot.png"),
plot = bar_plot,
width = 10,
height = 10,
units = "in",
device = "png")
here::i_am("code/visual.R")
absolute_file_location <- here::here("data","course_engagement.csv")
data <- read.csv(absolute_file_location, header = TRUE)
library(ggplot2)
# Replacing the ":" with a "." so that R can recognize it eventually as numeric variable
data$length_sub <- gsub(":", ".", data$length) # trying to replace all the colons with a period and creating a new variable
data$length_sub
table(data$length_sub)
# Adding quotation marks
data$length_new <- gsub(",", "", data$length_sub)
data$length_new
str(data$length_new)
# Changing one value so that it can be summed later
data$length_new[data$length_new == "1.04.56"] <- "62.5"
# Turning the length variable into a numeric variable
data$leng <- as.numeric(data$length_new)
summary(data$leng)
library(dplyr)
data %>% # creating a new variable that sums the total video length for each topic
group_by(topic) %>%
mutate(sum_lengths = sum(leng)) -> data
summary(data$sum_lengths) # checking to see how many NAs there are
# visualize a comparison of the total length of all videos for each topic
bar_plot <- ggplot(data, aes(x = topic, y = sum_lengths, fill = topic)) +
geom_bar(position="dodge", stat="identity") +
labs(x = "Topic" , y = "Length of Video (in minutes)", title = "Figure 1. INFO 550 Lecture Video Lengths by Topic") +
scale_x_discrete(labels = c("Course Logistics", "Mac Install",
"Make", "Project Organization",
"RMarkdown", "Terminal",
"Windows Install")) +
scale_fill_manual(name = "Topics", labels = c('Course Logistics',
"Mac Install",
"Make",
"Project Organization",
"RMarkdown",
"Terminal",
"Windows Install"),
values = c('aquamarine', 'aquamarine3',
'lightseagreen', 'pink',
'lightblue1', 'lightblue',
'lightskyblue4')) +
theme(plot.title = element_text(hjust = 0.5)) +
theme_bw()
bar_plot
ggsave(here::here("output/bar_plot.png"),
plot = bar_plot,
width = 10,
height = 8,
units = "in",
device = "png")
library(ggplot2)
#putting each year into separate data frames to graph them on top of each other
daily_21 <- subset(pm_daily_mean, year == 2021)
pm_daily_mean <- read.csv("data/agg_PM25_2021-22_daily_mean.csv")
setwd("C:/Users/rache/OneDrive - Emory University/Documents/Fall 2022/INFO 580 Data Science Toolkit/RStudio Projects/final-project")
pm_daily_mean <- read.csv("data/agg_PM25_2021-22_daily_mean.csv")
here::i_am("code/01_make_summary_table.R")
library(knitr)
library(kableExtra)
## setting up data to calculate correctly for table
# converting dates from characters to dates
pm_daily_mean$date <- as.Date(c(pm_daily_mean$date), "%m/%d/%Y")
# creating a column for month and year
pm_daily_mean$month <- months(pm_daily_mean$date)
pm_daily_mean$year <- format(pm_daily_mean$date, format="%Y")
# aggregating daily values by month and year
monthly_mean <- aggregate(avg_conc~month+year, pm_daily_mean, mean)
## making the table
knitr::kable(monthly_mean,
col.names = c("Month", "Year", "Average PM2.5 Concentration [ug/m3]"),
align = "llc",
caption = "This table displays the average concentration of PM2.5 by month in winter 2021 and 2022, averaged across all EPA monitoring stations in Salt Lake County.",
digits = 2
) %>%
kable_material(c("striped", "hover")) %>%
save_kable("output/final_table.html")
library(ggplot2)
#putting each year into separate data frames to graph them on top of each other
daily_21 <- subset(pm_daily_mean, year == 2021)
daily_22 <- subset(pm_daily_mean, year == 2022)
#aligning 2022 data with 2021 by creating a 'fake date' so the two lines for each year overlay nicely on a graph where the x-axis is just day/month
daily_22$fake_date <- daily_21$date
#making a time series graph
ggplot_object <- ggplot() +
geom_line(data=daily_21, aes(x=date, y=avg_conc, group=year, color=year)) +
geom_line(data=daily_22, aes(x=fake_date, y=avg_conc, group=year, color=year)) +
geom_point() +
scale_x_date(date_breaks = "10 day", date_labels = "%m/%d") +
labs(title = "Average Daily PM2.5 Concentration January to March of 2021 and 2022",
x = 'Date',
y = 'Avg. PM2.5 Conc. (ug/m3)',
color = "Year",
caption = "Time series data of daily average PM2.5
concentrations in Salt Lake County in winter of 2021 and 2022") +
theme(legend.position = "bottom", plot.title=element_text(hjust=0.5)) +
scale_color_manual(values = c("#9970de", "#37b9bf"))
ggsave("output/time_series_plot.svg",
plot = last_plot(),
width = 10,
height = 8,
unit = "in")
library(ggplot2)
#putting each year into separate data frames to graph them on top of each other
daily_21 <- subset(pm_daily_mean, year == 2021)
daily_22 <- subset(pm_daily_mean, year == 2022)
#aligning 2022 data with 2021 by creating a 'fake date' so the two lines for each year overlay nicely on a graph where the x-axis is just day/month
daily_22$fake_date <- daily_21$date
#making a time series graph
ggplot_object <- ggplot() +
geom_line(data=daily_21, aes(x=date, y=avg_conc, group=year, color=year)) +
geom_line(data=daily_22, aes(x=fake_date, y=avg_conc, group=year, color=year)) +
geom_point() +
scale_x_date(date_breaks = "10 day", date_labels = "%m/%d") +
labs(title = "Average Daily PM2.5 Concentration January to March of 2021 and 2022",
x = 'Date',
y = 'Avg. PM2.5 Conc. (ug/m3)',
color = "Year",
caption = "Time series data of daily average PM2.5
concentrations in Salt Lake County in winter of 2021 and 2022") +
theme(legend.position = "bottom", plot.title=element_text(hjust=0.5)) +
scale_color_manual(values = c("#9970de", "#37b9bf"))
ggsave("output/time_series_plot.png",
plot = last_plot(),
width = 10,
height = 8,
unit = "in")
#| fig.align = "center",
#| out.width = "500px"
knitr::include_graphics(
here::here("output/time_series_plot.png")
)
# aggregating daily values by month and year
monthly_mean <- aggregate(avg_conc~month+year, pm_daily_mean, mean)
View(monthly_mean)
monthly_mean$month <- factor(monthly_mean$month, levels = c('January', 'February', 'March'))
## making the table
knitr::kable(monthly_mean,
col.names = c("Month", "Year", "Average PM2.5 Concentration [ug/m3]"),
align = "llc",
caption = "This table displays the average concentration of PM2.5 by month in winter 2021 and 2022, averaged across all EPA monitoring stations in Salt Lake County.",
digits = 2
) %>%
kable_material(c("striped", "hover")) %>%
save_kable("output/final_table.html")
View(monthly_mean)
pm_daily_mean <- read.csv("data/agg_PM25_2021-22_daily_mean.csv")
View(pm_daily_mean)
## setting up data to calculate correctly for table
# converting dates from characters to dates
pm_daily_mean$date <- as.Date(c(pm_daily_mean$date), "%m/%d/%Y")
# creating a column for month and year
pm_daily_mean$month <- months(pm_daily_mean$date)
here::i_am("code/01_make_summary_table.R")
library(knitr)
library(kableExtra)
## setting up data to calculate correctly for table
# converting dates from characters to dates
pm_daily_mean$date <- as.Date(c(pm_daily_mean$date), "%m/%d/%Y")
# creating a column for month and year
pm_daily_mean$month <- months(pm_daily_mean$date)
pm_daily_mean$month <- factor(pm_daily_mean$month, levels = c('January', 'February', 'March'))
pm_daily_mean$year <- format(pm_daily_mean$date, format="%Y")
# aggregating daily values by month and year
monthly_mean <- aggregate(avg_conc~month+year, pm_daily_mean, mean)
## making the table
knitr::kable(monthly_mean,
col.names = c("Month", "Year", "Average PM2.5 Concentration [ug/m3]"),
align = "llc",
caption = "This table displays the average concentration of PM2.5 by month in winter 2021 and 2022, averaged across all EPA monitoring stations in Salt Lake County.",
digits = 2
) %>%
kable_material(c("striped", "hover")) %>%
save_kable("output/final_table.html")
setwd("C:/Users/rache/OneDrive - Emory University/Documents/Fall 2022/INFO 580 Data Science Toolkit/RStudio Projects/engagement-report")
here::i_am("code/01_make_summary_table.R")
setwd("C:/Users/rache/OneDrive - Emory University/Documents/Fall 2022/INFO 580 Data Science Toolkit/RStudio Projects/final-project")
here::i_am("code/01_make_summary_table.R")
library(knitr)
library(kableExtra)
## setting up data to calculate correctly for table
# converting dates from characters to dates
pm_daily_mean$date <- as.Date(c(pm_daily_mean$date), "%m/%d/%Y")
# creating a column for month and year
pm_daily_mean$month <- months(pm_daily_mean$date)
pm_daily_mean$month <- factor(pm_daily_mean$month, levels = c('January', 'February', 'March'))
pm_daily_mean$year <- format(pm_daily_mean$date, format="%Y")
# aggregating daily values by month and year
monthly_mean <- aggregate(avg_conc~month+year, pm_daily_mean, mean)
## making the table
knitr::kable(monthly_mean,
col.names = c("Month", "Year", "Average PM2.5 Concentration [ug/m3]"),
align = "llc",
caption = "This table displays the average concentration of PM2.5 by month in winter 2021 and 2022, averaged across all EPA monitoring stations in Salt Lake County.",
digits = 2
) %>%
kable_material(c("striped", "hover")) %>%
save_kable("output/final_table.html")
library(htmltools)
htmltools::includeHTML("output/final_table.html")
setwd("C:/Users/rache/OneDrive - Emory University/Documents/Fall 2022/INFO 580 Data Science Toolkit/RStudio Projects/engagement-report")
#| fig.align = "center",
#| out.width = "800px"
knitr::include_graphics(
here::here("output/bar_plot.png")
)
